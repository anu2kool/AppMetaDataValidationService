version: "3.8"
services:
  # PostgreSQL service
  db:
    image: postgres:latest
    container_name: my_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD:
      POSTGRES_DB: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  flaskapp:
    build:
      context: ./flask_app
      dockerfile: Dockerfile
    #network_mode: "host"
    container_name: flaskbundleidapp
    ports:
      - "5000:5000"

  # Spring Boot application service
  springapp:
    build:
      context: .
      dockerfile: Dockerfile
    #network_mode: "host"
    container_name: springapp
    depends_on:
      - db
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/postgres
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD:
      SPRING_JPA_GENERATE_DDL: true
      SPRING_JPA_HIBERNATE_DDL_AUTO: create
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
    volumes:
      - '/Users/anukool.dwivedi/Desktop/OnBoardingProject/AppMetaDataValidationService/RegisterPublisher/logs/requests.log:/app/logs/requests.log'

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    #network_mode: "host"
    command:
      - "--web.enable-lifecycle"
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus


volumes:
  postgres_data:
  prometheus_data:


